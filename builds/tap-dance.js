#!/usr/bin/env node
'use strict';var tapOut=require('tap-out'),chalk=require('chalk'),fns=require('./fns'),dot=chalk.green('\u2022'),failures=[],passed=0,start=Date.now();console.log('\n');var listFailures=function(){failures.forEach(function(a,b){console.log(''),console.log(chalk.red('   #'+b+' '+chalk.red('- '+a.name+' -')));var c='';c+=chalk.cyan('           \''+a.error.actual+'\''),c+='\n',c+=chalk.grey('     want: ')+chalk.magenta('\''+a.error.expected+'\''),console.log(c)})},done=function(){if(0===failures.length){var a=fns.duration(start);console.log(chalk.gray(' \u2714\uFE0F     '+a+'s')),process.exit(0)}else{var b=1===failures.length?'failure':'failures';listFailures(),console.log('\n'),console.log('           '+chalk.grey(fns.niceNumber(passed)+' passed')),console.log(chalk.red('  \u25E0\u25E1\u25DC\u25E0\u25E1-\u25E1    '+fns.niceNumber(failures.length)+' '+b+'   ')),process.exit(1)}},t=tapOut(done);t.on('assert',function(a){!0===a.ok?(0===failures.length&&process.stdout.write(dot),passed+=1):(0===failures.length&&(process.stdout.write(chalk.red(' \u2718  ('+a.name+')')+'\n'),console.log(chalk.red('          . . .'))),failures.push(a))}),t.on('comment',function(a){console.log(a.raw)}),process.stdin.pipe(t);
